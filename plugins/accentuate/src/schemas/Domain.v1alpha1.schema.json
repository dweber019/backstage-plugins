{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "DomainV1alpha1",
  "description": "A Domain groups a collection of systems that share terminology, domain models, business purpose, or documentation, i.e. form a bounded context.",
  "allOf": [
    {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "A display name of the entity, to be presented in user interfaces instead of the name property, when available.",
              "examples": ["React SSR Template"],
              "minLength": 1
            },
            "description": {
              "type": "string",
              "description": "A short (typically relatively few words, on one line) description of the entity."
            },
            "labels": {
              "type": "object",
              "description": "Key/value pairs of identifying information attached to the entity.",
              "additionalProperties": true,
              "patternProperties": {
                "^.+$": {
                  "type": "string"
                }
              }
            },
            "annotations": {
              "type": "object",
              "description": "Key/value pairs of non-identifying auxiliary information attached to the entity.",
              "additionalProperties": true,
              "patternProperties": {
                "^.+$": {
                  "type": "string"
                }
              }
            },
            "tags": {
              "type": "array",
              "description": "A list of single-valued strings, to for example classify catalog entities in various ways.",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "links": {
              "type": "array",
              "description": "A list of external hyperlinks related to the entity. Links can provide additional contextual information that may be located outside of Backstage itself. For example, an admin dashboard or external CMS page.",
              "items": {
                "type": "object",
                "required": ["url"],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "A url in a standard uri format.",
                    "examples": ["https://admin.example-org.com"],
                    "minLength": 1
                  },
                  "title": {
                    "type": "string",
                    "description": "A user friendly display name for the link.",
                    "examples": ["Admin Dashboard"],
                    "minLength": 1
                  },
                  "icon": {
                    "type": "string",
                    "description": "A key representing a visual icon to be displayed in the UI.",
                    "examples": ["dashboard"],
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "description": "An optional value to categorize links into specific groups.",
                    "examples": [
                      "runbook",
                      "documentation",
                      "logs",
                      "dashboard"
                    ],
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "spec": {
          "type": "object",
          "properties": {
            "owner": {
              "type": "string",
              "description": "An entity reference to the owner of the component.",
              "examples": ["artist-relations-team", "user:john.johnson"],
              "minLength": 1
            }
          }
        }
      }
    }
  ]
}
